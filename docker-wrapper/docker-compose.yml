# version: '3.9'

services:
  loghi-wrapper:
    build:
      context: ..
      dockerfile: ./docker-wrapper/Dockerfile
    image: loghi-wrapper:latest
    container_name: loghi-wrapper
    volumes:
      # Mount Docker socket for Docker-in-Docker functionality
      - /var/run/docker.sock:/var/run/docker.sock
      # Mount Git modules
      - ${LAYPA_MODULE}:/app/laypa
      - ${LOGHI_HTR_MODULE}:/app/loghi-htr
      - ${LOGHI_TOOLING_MODULE}:/app/loghi-tooling
      - ${PRIMA_CORE_LIBS_MODULE}:/app/prima-core-libs
      # Mount Workspace directory
      - ${WORKSPACE_PATH}:/workspace
      - ${DESTINATION_PATH}:/destination
      # Add volumes for temp directories
      - loghi_temp:/tmp
      - loghi_logs:/app/logs
      - loghi_workspace:/app/temp_workspace
    environment:
      - TZ=${TZ:-Europe/Amsterdam}
      - ENABLE_CRON=${ENABLE_CRON:-false}
      - USE_GIT_SUBMODULES=${USE_GIT_SUBMODULES:-false}
      - WORKSPACE_PATH=/workspace
      - DESTINATION_PATH=/destination
      - LANG=en_US.UTF-8
      - LANGUAGE=en_US:en
      - LC_ALL=en_US.UTF-8
      - MPLCONFIGDIR=/tmp/matplotlib
    # Run as root to set permissions, then execute commands as ubuntu
    command: sh -c "
      mkdir -p /tmp/matplotlib && chmod 777 /tmp/matplotlib &&
      chmod 777 /tmp && 
      chmod 777 /app/temp_workspace &&
      chmod 777 /app/logs &&
      chmod 666 /var/run/docker.sock &&
      chown -R ubuntu:ubuntu /app /workspace /tmp /app/logs /app/temp_workspace &&
      su ubuntu -c 'tail -f /dev/null'"
    # Don't set the user here, as we need root for initial setup
    # Uncomment if you need to use GPUs
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

volumes:
  loghi_temp:
  loghi_logs:
  loghi_workspace:
    